version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      #      - "3031:3031"
      - "13031:3031"
    volumes:
      # Mount your app code for live reload
      - ./:/app:delegated            # <— source & package.json, lockfile, prisma, etc.
      - /app/node_modules            # <— keep the container's own node_modules intact
    environment:
      # Next.js dev settings
      - NEXT_TELEMETRY_DISABLED=1
      - NODE_ENV=development

      #  backend env vars (if needed in dev)
      - DATABASE_URL=postgresql://postgres:postgres@postgres/db
      - JWT_SECRET=HIDUPMAHASISWA
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_USE_SSL=false
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=iom-itb
      - AZURE_AD_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_AD_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_AD_TENANT_ID=${AZURE_TENANT_ID}
      - NEXTAUTH_SECRET=random
        #      - NEXTAUTH_URL=http://localhost:3031
      - NEXTAUTH_URL=http://localhost:13031
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      #- "5432:5432"
      - ":5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  minio:
    image: minio/minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: [ "sh", "-c",
      # strip CRLF, then run
      "sed -i 's/\\r$//' /minio-init.sh && chmod +x /minio-init.sh && /minio-init.sh"
    ]
    volumes:
      - ./minio-init.sh:/app/minio-init.sh:ro
    restart: "no"

volumes:
  postgres-data:
  minio-data:
