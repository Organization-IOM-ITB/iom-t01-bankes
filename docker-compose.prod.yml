services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: iom-itb-app:prod
    env_file:
      - .env
    ports:
      - "13031:3031"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "15432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 5s
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SERVER_URL=${MINIO_SERVER_URL:-http://localhost:19000}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_CONSOLE_URL:-http://localhost:19001}
    command: server /data --console-address ":19001"
    ports:
      - "19000:9000"
      - "19001:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:19000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  minio-init:
    image: minio/mc:latest
    env_file:
      - .env
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./minio-init.sh:/minio-init.sh
    entrypoint: ["/bin/bash", "/minio-init.sh"]
    restart: "no"

volumes:
  postgres-data:
  minio-data:
