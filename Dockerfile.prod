# ───────────────────────────────────────────────────────────────────────────────
# 1) Builder: install everything and build
# ───────────────────────────────────────────────────────────────────────────────
FROM node:23-slim AS builder

WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Install build dependencies including build tools for native modules
RUN apt-get update -y && \
    apt-get install -y \
    openssl \
    ca-certificates \
    build-essential \
    python3 \
    && rm -rf /var/lib/apt/lists/* \
    && npm install -g wait-on

# 1.1) install all dependencies
COPY package.json package-lock.json tsconfig.json postcss.config.js ./

# Clear npm cache and rebuild native modules in container
RUN npm cache clean --force
RUN npm install -D @tailwindcss/postcss autoprefixer --legacy-peer-deps
RUN npm ci --include=dev --legacy-peer-deps

# Force rebuild bcrypt for the container architecture
RUN npm rebuild bcrypt --build-from-source

# 1.2) generate Prisma client (make sure)
COPY prisma/ ./prisma/

RUN npx prisma generate

# 1.3) copy rest of the app and build
COPY . .

RUN npm run build

# ───────────────────────────────────────────────────────────────────────────────
# 2) Runner: minimal runtime with only prod deps
# ───────────────────────────────────────────────────────────────────────────────
FROM node:23-slim AS runner

WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Install OpenSSL in runtime image as well
RUN apt-get update -y && \
    apt-get install -y openssl ca-certificates && \
    rm -rf /var/lib/apt/lists/* && \
    npm install -g wait-on

# 2.1) copy only production node_modules from builder
COPY --from=builder /app/node_modules/ ./node_modules/

# 2.2) copy Prisma client
COPY --from=builder /app/node_modules/.prisma/ ./node_modules/.prisma/
COPY --from=builder /app/node_modules/@prisma/ ./node_modules/@prisma/

# 2.3) copy app artifacts
COPY --from=builder /app/package.json ./
COPY --from=builder /app/next.config.ts ./
COPY --from=builder /app/public/ ./public/
COPY --from=builder /app/.next/ ./.next/
COPY --from=builder /app/scripts/ ./scripts/

# 2.4) Prisma schema & migrations
COPY --from=builder /app/prisma/         ./prisma/

# copy our start/migrate entrypoint
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

EXPOSE 3031

ENTRYPOINT ["entrypoint.sh"]
CMD ["npm", "start"]